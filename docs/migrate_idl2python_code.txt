2017/7/14, jzhu, migrate NDVI algorithm from IDL code to python code.
implement on panda, use anaconda2

cd ~/apps/anaconda2/bin

create a nps_ndvi environment

./conda create --name nps_ndvi

./conda info --envs

source activate nps_ndvi

#install qgis in the new env

./conda install -c conda-forge qgis

export PYTHONPATH=$PATHONPATH:/home/jzhu4/apps/anaconda2/pkgs/qgis-2.18.8-py27_1/share/qgis/python
sometime needs add LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/jzhu4/apps/anaconda2/pkgs/qgis-2.18.8-py27_1/lib

standalone script template
-----------------------------------------------
from qgis.core import *
QgsApplication.setPrefixPath("/usr", True)
qgs = QgsApplication([], False)
qgs.initQgis()
print ("hello,QGIS!")
qgs.exitQgis()
-----------------------------------------------


found QGIS is complicated. I think I should use GDAL-python to do the project.

https://pcjericks.github.io/py-gdalogr-cookbook/index.html

prepare raw 7-day composite data

download data
cd /data/modis_ndvi/2016/emodis

url=https://dds.cr.usgs.gov/emodis/Alaska/historical/TERRA
wget --user jiang@gina.alaska.edu --password Gina7Zhu -r -nH --reject="index.html*" -A "*NDVI*QKM*.zip" ${url}/2016

unzip the data

cd ~/projects/nps/ndvi_python/scripts
./1yr_emodis_250_unzip_v2.bash /home/jzhu4/data/modis_ndvi/2016/emodis/Alaska/historical/TERRA ~/data/modis_ndvi 2016

create file lists flist_ndvi, flist_qual

./1yr_emodis_250_flist.bash ~/data/modis_ndvi 2016

edit oneyear_data_layer_subset_good.py

this complish stack multiple files, spatial filter, output multiple file into a file.


raster.GetGeoTransform()

adfGeoTransform[0] /* top left x */
adfGeoTransform[1] /* w-e pixel resolution */
adfGeoTransform[2] /* 0 */
adfGeoTransform[3] /* top left y */
adfGeoTransform[4] /* 0 */
adfGeoTransform[5] /* n-s pixel resolution (negative value) */



1. stack one-year ndvi and quality files together 
idl program: oneyear_data_layer_subset_good, '$flist_ndvi','$flist_bq','$ul_lon','$ul_lat', '$lr_lon','$lr_lat'


